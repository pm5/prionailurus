// Generated by LiveScript 1.3.1
(function(){
  "use strict";
  var osmLayer, markerLayer, sliderControl, map, addMarker, addPoint;
  osmLayer = function(){
    return L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
    });
  };
  markerLayer = L.layerGroup();
  sliderControl = L.control.sliderControl({
    layer: markerLayer
  });
  map = L.map("map").addLayer(osmLayer()).addLayer(markerLayer);
  addMarker = function(layer){
    return function(it){
      var x;
      return L.marker((function(){
        var i$, ref$, len$, results$ = [];
        for (i$ = 0, len$ = (ref$ = ['Latitude', 'Longitude']).length; i$ < len$; ++i$) {
          x = ref$[i$];
          results$.push(it[x]);
        }
        return results$;
      }()), {
        time: it.CollectedDateTime.format('YYYY-MM-DD HH:mm:ss+01')
      }).bindPopup(it.CollectedDateTime).addTo(layer);
    };
  };
  addPoint = addMarker(markerLayer);
  $.get("topic_animal.csv", function(topicAnimal){
    return $.csv.toObjects(topicAnimal, {}, function(err, data){
      var d;
      if (err) {
        console.log(err);
      }
      (function(){
        var i$, ref$, len$, results$ = [];
        for (i$ = 0, len$ = (ref$ = data).length; i$ < len$; ++i$) {
          d = ref$[i$];
          if (d.CollectedDateTime && +d['iPrecision '] > 0) {
            results$.push(d);
          }
        }
        return results$;
      }()).map(function(it){
        it.CollectedDateTime = moment(it.CollectedDateTime);
        return it;
      }).sort(function(a, b){
        return a.CollectedDateTime.valueOf() - b.CollectedDateTime.valueOf();
      }).forEach(function(it){
        return addPoint(it);
      });
      map.addControl(sliderControl).setView([24.5, 121], 10);
      return sliderControl.startSlider();
    });
  });
}).call(this);
